# WSL環境で動作するGemini用デバッグプロンプト集
# Claude CLI MCP Server動作確認用
# 注: GeminiはWSL上で動作し、Claude CLIもWSL内で実行されます

## 1. 基本動作確認
# test_claude_cliツールの動作確認
- prompt: "test_claude_cliツールを実行して、Claude CLIが正しく設定されているか確認してください"

# execute_claudeツールの基本動作確認
- prompt: "execute_claudeツールを使って「こんにちは」とClaudeに送信してください"

## 2. セッション継続性テスト
# 初回実行（新規セッション作成）
- prompt: "execute_claudeで「私は山田太郎です」とClaudeに伝えてください"

# セッション継続確認（--resumeオプション動作確認）
- prompt: "execute_claudeで「私の名前を覚えていますか？」と聞いてください"

# 追加の会話継続テスト
- prompt: "execute_claudeで「今日は良い天気ですね」と送信してください"

## 3. 履歴管理テスト
# 実行履歴の確認
- prompt: "get_execution_historyツールで直近5件の実行履歴を取得してください"

# セッション情報の確認
- prompt: "get_current_sessionツールで現在のセッションIDを確認してください"

# セッションリセット
- prompt: "reset_sessionツールでセッションをリセットしてください"

# リセット後の確認
- prompt: "execute_claudeで「私の名前を覚えていますか？」と聞いてください（セッションがリセットされているはずです）"

## 4. ファイルコンテキストテスト
# README.mdを使ったコンテキスト実行（WSL内のパス）
- prompt: "execute_claude_with_contextツールを使って、/mnt/c/prj/AI/prg/mcp-claude-context-continuity/README.mdファイルの内容について「このプロジェクトの主な特徴を3つ教えてください」と質問してください"

## 5. エンコーディングテスト（基本）
# 日本語処理
- prompt: "execute_claudeで「日本の伝統文化について教えてください」と送信してください"

# 英数字・記号混在
- prompt: "execute_claudeで「Pythonで'Hello World'を出力する方法を教えて」と送信してください"

## 6. エラーハンドリングテスト
# 存在しないファイルでのコンテキスト実行（WSL内のパス）
- prompt: "execute_claude_with_contextで、存在しないファイル「/mnt/c/prj/AI/prg/mcp-claude-context-continuity/notfound.txt」について質問してみてください"

# 履歴クリア
- prompt: "clear_execution_historyツールで履歴をクリアしてください"

## 7. パフォーマンステスト
# 長文プロンプト
- prompt: "execute_claudeで「量子コンピューティングの基本原理と現在の技術的課題、将来の応用可能性について詳しく説明してください」と送信してください"

## 8. 連続実行テスト
# 複数の質問を連続実行
- prompt: "以下を順番に実行してください：1) execute_claudeで「フィボナッチ数列について説明して」、2) execute_claudeで「先ほどの数列の最初の10項を計算して」、3) get_execution_historyで履歴を確認"

## デバッグ時の確認ポイント
1. 各コマンドの実行時間が記録されているか
2. session_idが正しく保存・使用されているか
3. --resumeオプションが2回目以降の実行で使用されているか
4. エラーが発生した場合、適切なエラーメッセージが返されるか
5. tool_nameフィールドが全ての応答に含まれているか
6. WSL環境での実行パスが正しく解決されているか

## ログファイル確認
実行後は以下のログファイルを確認：
- claude_command_debug.log - コマンド実行の詳細ログ
- セッションIDの更新履歴
- 実行時間の記録

## トラブルシューティング
もし以下の症状が発生した場合：
- タイムアウト: DEFAULT_TIMEOUT（300秒）の値を確認
- 文字化け: encoding='utf-8', errors='replace'の設定を確認
- パス解決エラー: WSL環境でのClaude CLIパス（/home/ユーザー名/.nvm/versions/node/*/bin/claude）を確認
- asyncio問題: stdin=asyncio.subprocess.DEVNULLが正しく設定されているか確認

## WSL環境での実行確認
- 使用バージョン: 非同期版（claude_cli_server.py） - stdin継承問題が解決済み
- Gemini設定ファイル例:
  ```json
  {
    "mcpServers": {
      "claude-cli-server": {
        "command": "python3",
        "args": [
          "/mnt/c/prj/AI/prg/mcp-claude-context-continuity/src/claude_cli_server.py"
        ]
      }
    }
  }
  ```
- Pythonパス: python3（WSL内のPython）
- MCPサーバーパス: /mnt/c/prj/AI/prg/mcp-claude-context-continuity/src/claude_cli_server.py